{
  "name": "todolist-monorepo",
  "private": true,
  "packageManager": "pnpm@9.12.1",
  "scripts": {
    "dev": "pnpm -r --parallel --stream run dev",
    "dev:api": "pnpm -F @todolist/backend dev",
    "dev:web": "pnpm -F @todolist/frontend dev",
    "dev:with-infra": "docker-compose -f docker-compose.dev-infra.yml up -d && pnpm run dev",
    "dev:infra": "docker-compose -f docker-compose.dev-infra.yml up",
    "dev:infra:down": "docker-compose -f docker-compose.dev-infra.yml down",
    "build": "pnpm -r run build",
    "build:api": "pnpm -F @todolist/backend build",
    "build:web": "pnpm -F @todolist/frontend build",
    "typecheck": "pnpm -r run typecheck",
    "lint": "pnpm -r run lint",
    "lint:fix": "pnpm -r run lint:fix",
    "test": "pnpm -F @todolist/backend run test",
    "test:unit": "pnpm -F @todolist/backend run test:unit",
    "test:integration": "pnpm -F @todolist/backend run test:integration",
    "test:ci": "pnpm -F @todolist/backend run test:ci",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "start": "pnpm -F @todolist/backend start",
    "clean": "pnpm -r exec node -e \"const fs=require('fs');['dist','build','node_modules'].forEach(d=>{try{fs.rmSync(d,{recursive:true,force:true})}catch(e){}})\"",
    "clean:all": "pnpm -r exec node -e \"const fs=require('fs');['dist','build','node_modules'].forEach(d=>{try{fs.rmSync(d,{recursive:true,force:true})}catch(e){}})\" && pnpm store prune",
    "prepare": "husky install",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:prod": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up",
    "docker:clean": "docker-compose down -v --rmi all --remove-orphans"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "husky": "^8.0.3",
    "lint-staged": "^14.0.1",
    "prettier": "^3.6.2",
    "typescript": "^5.9.2"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  }
}
